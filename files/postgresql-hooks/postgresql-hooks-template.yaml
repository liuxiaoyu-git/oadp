---
kind: Namespace
apiVersion: v1
metadata:
  name: postgresql-hooks
  labels:
    app: postgresql
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql
  namespace: postgresql-hooks
  labels:
    app: postgresql
stringData:
  database-name: db
  database-password: redhat
  database-user: dani
  database-root-password: redhat
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: postgresql-hooks
  labels:
    app: postgresql
spec:
  ports:
  - name: postgresql
    port: 5432
  selector:
    name: postgresql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql
  namespace: postgresql-hooks
  labels:
    app: postgresql
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: "ocs-storagecluster-ceph-rbd"
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgresql
  name: postgresql
  namespace: postgresql-hooks
spec:
  selector:
    matchLabels:
      app: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgresql
      annotations:
        pre.hook.backup.velero.io/command: '["/bin/bash", "-c", "psql -c \"CHECKPOINT;\""]'
    spec:
      containers:
      - image: registry.redhat.io/rhel8/postgresql-12
        name: postgresql
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: postgresql
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: postgresql
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: postgresql
        - name: POSTGRESQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-root-password
              name: postgresql
        ports:
        - containerPort: 5432
          name: postgresql
        resources:
          limits:
            memory: 512Mi
        volumeMounts:
          - name: postgresql-data
            mountPath: /var/lib/pgsql/data
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql
